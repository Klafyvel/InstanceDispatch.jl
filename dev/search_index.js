var documenterSearchIndex = {"docs":
[{"location":"#InstanceDispatch","page":"Home","title":"InstanceDispatch","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for InstanceDispatch.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#InstanceDispatch.@instancedispatch-Tuple{Any}","page":"Home","title":"InstanceDispatch.@instancedispatch","text":"@instancedispatch myfunction(::T, args...; kwargs...)\n\nWrite a specialized function to dispatch on instances values of type T. The only reauirement is that Type{T} has its own method for Base.instances.\n\nExamples\n\n@enum GreetEnum Hello Goodbye\nfunction greet(::Val{Hello}, who)\n    return \"Hello \" * who\nend\nfunction greet(::Val{Goodbye}, who)\n    return \"Goodbye \" * who\nend\n@instancedispatch greet(::GreetEnum, who)\n\nThis last line is equivalent to defining the following method:\n\nfunction greet(e::GreetEnum, who)\n    if e == Hello\n        return greet(Val(Hello), who)\n    elseif e == Goodbye\n        return greet(Val(Goodbye), who)\n    else end\nend\n\n\n\n\n\n","category":"macro"}]
}
